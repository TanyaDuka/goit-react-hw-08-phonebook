{"version":3,"file":"static/js/546.009b38bb.chunk.js","mappings":"8NACA,EAAwB,yBAAxB,EAAyD,yBAAzD,EAAyF,wBAAzF,EAAyH,yBAAzH,EAA0J,yBAA1J,EAA4L,0B,SCM7K,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACHR,EAASS,GACT,MAEF,IAAK,WACHP,EAAYO,KAmBlB,OACE,2BACE,qBAASC,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,qCACA,kBAAMD,UAAWC,EAAQC,SAfV,SAAAN,GACnBA,EAAEO,iBAEFV,EAASW,EAAAA,GAAAA,MAAqB,CAAEf,MAAAA,EAAOE,SAAAA,KAAac,MAAK,YAC5B,cAD0C,EAAXC,KACjDC,gBACPjB,EAAS,IACTE,EAAY,SASZ,WACE,mBAAOQ,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXO,KAAK,QACLV,KAAK,QACLC,MAAOV,EACPoB,SAAUd,EACVe,YAAY,yBAEZC,UAAQ,QAGZ,mBAAOX,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXO,KAAK,WACLV,KAAK,WACLC,MAAOR,EACPkB,SAAUd,EACVe,YAAY,2BAEZC,UAAQ,QAGZ,mBAAQX,UAAWC,EAAUO,KAAK,SAAlC","sources":["webpack://react-homework-template/./src/pages/LoginPage/LoginPage.module.css?f8e0","pages/LoginPage/LoginPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"LoginPage_login__A9aPB\",\"title\":\"LoginPage_title__RBt-o\",\"form\":\"LoginPage_form__h3Le9\",\"label\":\"LoginPage_label__eihZ8\",\"input\":\"LoginPage_input__-T8t7\",\"button\":\"LoginPage_button__phWEP\"};","import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../../redux/auth';\n\nimport s from './LoginPage.module.css';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(authOperations.logIn({ email, password })).then(({ meta }) => {\n      if (meta.requestStatus === 'fulfilled') {\n        setEmail('');\n        setPassword('');\n      }\n    });\n  };\n\n  return (\n    <main>\n      <section className={s.login}>\n        <h1 className={s.title}>Log in to your account</h1>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label}>\n            Email\n            <input\n              className={s.input}\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n              placeholder=\"Write down your e-mail\"\n              // autoComplete=\"off\"\n              required\n            />\n          </label>\n          <label className={s.label}>\n            Password\n            <input\n              className={s.input}\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              placeholder=\"Write down your password\"\n              // autoComplete=\"off\"\n              required\n            />\n          </label>\n          <button className={s.button} type=\"submit\">\n            Log in\n          </button>\n        </form>\n      </section>\n    </main>\n  );\n}\n"],"names":["LoginPage","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","currentTarget","name","value","className","s","onSubmit","preventDefault","authOperations","then","meta","requestStatus","type","onChange","placeholder","required"],"sourceRoot":""}